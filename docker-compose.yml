name: finalissima
services:
  nats:
    container_name: nats_service
    image: nats:latest
    ports:
      - "4222:4222"
      - "8222:8222"
    networks:
      - final-network
    healthcheck:
      test: [ "CMD", "/nats-server", "--help" ]
      interval: 5s
      timeout: 3s
      retries: 5
      start_period: 2s
  user_db:
    container_name: users_db
    image: postgres:15
    restart: always
    env_file:
      - ./user/.env.user
    ports:
      - "5433:5432"
    networks:
      - final-network
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
  recipe_db:
    container_name: recipe_db
    image: postgres:15
    restart: always
    env_file:
      - ./recipe/.env.recipe
    ports:
      - "5434:5432"
    networks:
      - final-network
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
  review_db:
    container_name: review_db
    image: postgres:15
    restart: always
    env_file:
      - ./review/.env.review
    ports:
      - "5435:5432"
    networks:
      - final-network
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
  statistics_db:
    container_name: statistics_db
    image: postgres:15
    restart: always
    env_file:
      - ./statistics/.env.statistics
    ports:
      - "5436:5432"
    networks:
      - final-network
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
  redis:
    container_name: redis_cache
    image: redis:latest
    env_file:
      - ./user/.env.user
    ports:
      - "7123:6379"
    networks:
      - final-network
  user:
    container_name: user_microservice
    build:
      context: .
      dockerfile: ./user/Dockerfile
    ports:
      - ":50051"
    env_file:
      - ./user/.env.user
    depends_on:
      user_db:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - final-network
  recipe:
    container_name: recipe_microservice
    build:
      context: .
      dockerfile: ./recipe/Dockerfile
    ports:
      - ":50052"
    env_file:
      - ./recipe/.env.recipe
    volumes:
      - ./photo:/app/photo
    depends_on:
      recipe_db:
        condition: service_healthy
    networks:
      - final-network
  review:
    container_name: review_microservice
    build:
      context: .
      dockerfile: ./review/Dockerfile
    ports:
      - ":50053"
    env_file:
      - ./review/.env.review
    depends_on:
      recipe_db:
        condition: service_healthy
    networks:
      - final-network
  statistics:
    container_name: statistics_service
    build:
      context: .
      dockerfile: ./statistics/Dockerfile
    ports:
      - ":50054"
    env_file:
      - ./statistics/.env.statistics
    depends_on:
      statistics_db:
        condition: service_healthy
    networks:
      - final-network
  api-gateway:
    container_name: api_gateway
    volumes:
      - ./photo:/app/photo
    build:
      context: .
      dockerfile: ./api-gateway/Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - user
      - recipe
      - statistics
      - review
      - nats
    networks:
      - final-network
  prometheus:
    container_name: prometheus
    image: prom/prometheus:latest
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - final-network
  grafana:
    container_name: grafana
    image: grafana/grafana:latest
    ports:
      - "3001:3000"
    networks:
      - final-network
    depends_on:
      - prometheus
  loki:
    container_name: loki
    image: grafana/loki:latest
    ports:
      - "3100:3100"
    networks:
      - final-network
  promtail:
    container_name: promtail
    image: grafana/promtail:latest
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./promtail-config.yaml:/etc/promtail/config.yaml
    command: -config.file=/etc/promtail/config.yaml
    networks:
      - final-network

networks:
  final-network:
    driver: bridge
